{
    "root": true,
    "parserOptions": {
        "sourceType": "module"
    },
    "extends": [
        "eslint:recommended",
        "plugin:svelte/recommended"
    ],
    "ignorePatterns": [
        "/dist/**",
        "/releases/**"
    ],
    "env": {
        "browser": true,
        "webextensions": true,
        "es2021": true
    },
    "globals": {
        "DOMPurify": "readonly",
        "__BROWSER__": "readonly"
    },
    "overrides": [
        {
            "files": "*.cjs",
            "env": {
                "node": true,
                "browser": false,
                "webextensions": false,
                "es2021": false,
                "es2022": true
            }
        },
        {
            "files": "*.svelte",
            "parser": "svelte-eslint-parser",
            "parserOptions": {
                "parser": "@typescript-eslint/parser"
            },
            "rules": {
                "one-var": ["error", "never"]
            }
        },
        {
            "files": "*.ts",
            "parser": "@typescript-eslint/parser",
            "plugins": ["@typescript-eslint"],
            "extends": "plugin:@typescript-eslint/all",
            "parserOptions": {
                "project": ["./tsconfig.json"]
            },
            "rules": {
                "@typescript-ban-tslint-comment": "off", // Not using TSLint
                "@typescript-eslint/brace-style": ["error", "1tbs", {"allowSingleLine": true}],
                "@typescript-eslint/comma-dangle": ["error", "only-multiline"],
                "@typescript-eslint/consistent-type-assertions": ["error", {"assertionStyle": "as", "objectLiteralTypeAssertions": "never"}],
                "@typescript-eslint/consistent-type-definitions": "off",
                "@typescript-eslint/consistent-type-exports": ["error", {"fixMixedExportsWithInlineTypeSpecifier": true}],
                "@typescript-eslint/explicit-module-boundary-types": "off", // Already using explicit-function-return-type
                "@typescript-eslint/indent": ["error", 4, {"SwitchCase": 1}], // Broken, but should still be useful. Disable with inline comments where necessary
                "@typescript-eslint/init-declarations": "off",
                "@typescript-eslint/lines-between-class-members": ["error", "always", {"exceptAfterSingleLine": true}],
                "@typescript-eslint/naming-convention": "off", // TODO Maybe implement that later?
                "@typescript-eslint/no-confusing-non-null-assertion": "off",
                "@typescript-eslint/no-extra-parens": "off",
                "@typescript-eslint/no-extraneous-class": "off",
                "@typescript-eslint/no-magic-numbers": ["warn", {"ignore": [0, 1, 24, 60]}],
                "@typescript-eslint/no-non-null-assertion": "off",
                "@typescript-eslint/no-parameter-properties": "off",
                "@typescript-eslint/no-restricted-imports": "off", // TODO Restrict imports of globals (e.g. DOMPurify)
                "@typescript-eslint/no-shadow": "off",
                "@typescript-eslint/no-throw-literal": ["error", {"allowThrowingAny": false, "allowThrowingUnknown": false}],
                "@typescript-eslint/no-type-alias": "off",
                "@typescript-eslint/no-unnecessary-type-arguments": "off",
                "@typescript-eslint/object-curly-spacing": "off",
                "@typescript-eslint/padding-line-between-statements": "off",
                "@typescript-eslint/parameter-properties": ["error", {"prefer": "parameter-property"}],
                "@typescript-eslint/prefer-enum-initializers": "off",
                "@typescript-eslint/prefer-namespace-keyword": "off", // We're using ES2015 modules
                "@typescript-eslint/prefer-readonly-parameter-types": "off",
                "@typescript-eslint/quotes": ["error", "double", {"avoidEscape": true}],
                "@typescript-eslint/sort-type-union-intersection-members": "off",
                "@typescript-eslint/space-before-function-paren": ["error", "never"],
                "@typescript-eslint/typedef": "off"
            }
        }
    ],
    "rules": {
        "array-bracket-newline": ["error", "consistent"],
        "array-bracket-spacing": ["error", "never"],
        "array-callback-return": "error",
        "array-element-newline": ["error", "consistent"],
        "arrow-spacing": "error",
        "block-scoped-var": "error",
        "block-spacing": "error",
        "brace-style": ["error", "1tbs", {"allowSingleLine": true}],
        "camelcase": ["error", {"ignoreDestructuring": true}],
        "comma-dangle": ["error", "only-multiline"],
        "comma-spacing": "error",
        "comma-style": "error",
        "complexity": "warn",
        "computed-property-spacing": "error",
        "consistent-return": "error",
        "consistent-this": "error",
        "curly": "error",
        "default-param-last": "error",
        "dot-location": ["error", "property"],
        "dot-notation": "error",
        "eol-last": "error",
        "eqeqeq": ["error", "smart"],
        "func-call-spacing": "error",
        "func-name-matching": "error",
        "func-names": ["error", "never"],
        "func-style": ["error", "declaration"],
        "function-call-argument-newline": ["error", "consistent"],
        "function-paren-newline": ["error", "consistent"],
        "generator-star-spacing": "error",
        "grouped-accessor-pairs": ["error", "getBeforeSet"],
        "implicit-arrow-linebreak": "error",
        "indent": ["error", 4, {"SwitchCase": 1}],
        "key-spacing": ["error", {"mode": "minimum"}],
        "keyword-spacing": "error",
        "lines-around-comment": ["warn", {"beforeLineComment": false, "beforeBlockComment": true}],
        "lines-between-class-members": ["error", "always", {"exceptAfterSingleLine": true}],
        "max-depth": "warn",
        "max-len": ["warn", { "code": 132, "ignoreTemplateLiterals": true, "ignoreRegExpLiterals": true, "ignoreUrls": true }],
        "max-nested-callbacks": ["error", 4],
        "max-statements-per-line": ["error", {"max": 2}],
        "multiline-comment-style": "error",
        "new-cap": "error",
        "new-parens": "error",
        "newline-per-chained-call": "error",
        "no-alert": "warn",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-confusing-arrow": "error",
        "no-constructor-return": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-duplicate-imports": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-mixed-operators": "error",
        "no-multi-assign": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-multiple-empty-lines": ["error", {"max": 2, "maxEOF": 1, "maxBOF": 1}],
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "error",
        "no-tabs": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": ["error", {"skipBlankLines": true}],
        "no-undef-init": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": ["error", {"defaultAssignment": false}],
        "no-unused-expressions": "error",
        "no-unused-vars": ["error", {"args": "none"}],
        "no-use-before-define": "error",
        "no-useless-call": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "no-with": "error",
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": "error",
        "object-curly-newline": "error",
        "object-curly-spacing": "error",
        "object-property-newline": ["error", {"allowAllPropertiesOnSameLine": true}],
        "one-var-declaration-per-line": "error",
        "operator-assignment": "error",
        "operator-linebreak": ["error", "before"],
        "prefer-arrow-callback": "error",
        "prefer-const": ["error", { "destructuring": "all" }],
        "prefer-exponentiation-operator": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": ["error", {"allowEmptyReject": true}],
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": "error",
        "quotes": ["error", "double", {"avoidEscape": true}],
        "radix": ["error", "as-needed"],
        "rest-spread-spacing": "error",
        "semi": "error",
        "semi-spacing": "error",
        "semi-style": "error",
        "sort-imports": ["error", {"ignoreDeclarationSort": true}],
        "space-before-blocks": "error",
        "space-before-function-paren": ["error", "never"],
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        "spaced-comment": ["error", "always", { "markers": ["/"] }],
        "strict": ["error", "global"],
        "switch-colon-spacing": "error",
        "symbol-description": "error",
        "template-curly-spacing": "error",
        "template-tag-spacing": "error",
        "unicode-bom": "error",
        "vars-on-top": "error",
        "wrap-iife": ["error", "inside"],
        "yield-star-spacing": "error"
    }
}
